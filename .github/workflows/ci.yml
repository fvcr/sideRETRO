name: build

on:
  push:
    branches:
      - master
      - dev
    paths:
      - '**.c'
      - '**.h'
      - docker/Dockerfile
    tags:
      - '*.*.*'

jobs:
  test:
    runs-on: ubuntu-18.04
    name: Build and test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install ubuntu dependencies
        run: >
          sudo apt-get install -y
          check
          ninja-build
          python3-pip
          python3-setuptools
          valgrind

      - name: Install meson and ninja
        run: pip install meson cpp-coveralls

      - name: Meson setup
        run: meson -Db_coverage=true builddir

      - name: Ninja build
        run: ninja -C builddir

      - name: Normal test
        id: normal_test
        run: meson test -C builddir

      - name: Valgring test
        id: valgring_test
        run: >
          meson test
          -C builddir
          --wrap='valgrind --leak-check=full --error-exitcode=1'
          -t 3
        env:
          CK_DEFAULT_TIMEOUT: 0

      - name: After sucess
        run: >
          coveralls
          --repo-token ${{ secrets.COVERALLS }}
          --root .
          --build-root builddir
          --exclude builddir/meson-private
          --exclude subprojects
          --exclude tests
          --exclude src/log.c
          --exclude src/logger.c
          --exclude src/main.c
          --exclude src/make_vcf.c
          --exclude src/merge_call.c
          --exclude src/process_sample.c
          --exclude src/sam.c
          --exclude src/thpool.c
          --exclude-pattern '.+\.h$'
          --gcov-options '\-lp'
        if: >
          steps.normal_test.outcome == 'success'
          &&
          steps.valgring_test.outcome == 'success'

      - name: After failure
        uses: actions/upload-artifact@v3
        with:
          name: meson-testlog
          path: builddir/meson-logs/
        if: >
          steps.normal_test.outcome == 'failure'
          ||
          steps.valgring_test.outcome == 'failure'

  docker:
    needs: test
    runs-on: ubuntu-18.04
    name: Build and deploy docker image
    steps:
      - name: Get release tag
        id: tag
        run: |
          case ${{ github.ref_name }} in
          master)
          echo name=latest >> $GITHUB_OUTPUT ;;
          *.*.*)
          echo name=release-${{ github.ref_name }} >> $GITHUB_OUTPUT ;;
          *)
          echo name=${{ github.ref_name }} >> $GITHUB_OUTPUT ;;
          esac

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          file: docker/Dockerfile
          tags: galantelab/sider:${{ steps.tag.outputs.name }}

